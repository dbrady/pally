#!/usr/bin/env ruby
require 'rubygems'
require 'yaml'
require 'trollop'
require 'rally_rest_api'

require File.expand_path(File.join(File.dirname(__FILE__), '..', 'lib', 'common.rb'))

# usage:
# pally [options] command <args>

opts = Trollop.options do
  opt :config, "Configuration file", :default => nil
  opt :username, "Username", :default => nil
  opt :password, "Password", :default => nil
  opt :project, "Project", :default => nil
  opt :iteration, "Iteration", :default => nil
end
args = ARGV.dup

# ----------------------------------------------------------------------
# Config file
if opts[:config]
  @config_file = opts[:config]
else 
  f1 = File.expand_path('~/.pally/pally.yml')
  f2 = File.expand_path(File.join(File.dirname(__FILE__), '..', 'config', 'pally.yml'))
  @config_file = File.exist?(f1) ? f1 : f2
end
raise "Config file does not exist: #{opts[:config]}" unless File.exists? @config_file
@config = YAML::load_file @config_file

[:username, :password].each do |arg|
  @config['login'][arg.to_s] = opts[arg] if opts[arg]
end

# ----------------------------------------------------------------------
# Crap that shouldn't even be in here but what ya gonna do
def login(username, password)
  @rally = RallyRestAPI.new :username => username, :password => password
end

# ----------------------------------------------------------------------
# Parse out command
command = args.shift
collection = args.shift

puts "COMMAND: #{command} #{collection}"
puts '-' * 80
case command.downcase
when 'list'
  login @config['login']['username'], @config['login']['password']
  if RallyRestAPI::ALLOWED_TYPES.include? collection
    puts @rally.find_all(collection).map {|i| "#{i.type}: #{i.name} | #{i.body}" }
  else
    raise "LIST: unrecognized list type. Got #{collection.inspect}, expected one of [#{RallyRestAPI::ALLOWED_TYPES * ', '}]"
  end
else
  raise "Unrecognized command: #{command}"
end




